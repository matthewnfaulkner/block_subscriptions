{"version":3,"file":"enrol_modal.min.js","sources":["../src/enrol_modal.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * This module provides the course copy modal from the course and\r\n * category management screen.\r\n *\r\n * @module     format_apoapage/copy_modal\r\n * @copyright  2020 onward The Moodle Users Association <https://moodleassociation.org/>\r\n * @author     Matt Porritt <mattp@catalyst-au.net>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n * @since      3.9\r\n */\r\n\r\ndefine(['jquery', 'core/str', 'core/modal_factory',\r\n        'core/ajax', 'core/fragment', 'core/notification'],\r\n        function($, Str, ModalFactory, ajax, Fragment, Notification) {\r\n\r\n    /**\r\n     * Module level variables.\r\n     */\r\n    var CancelModal = {};\r\n    var contextid;\r\n    var enrolId;\r\n    var plugin;\r\n    var subscriptionId;\r\n    var course;\r\n    var modalObj;\r\n    var plugin;\r\n    var spinner = '<p class=\"text-center\">'\r\n        + '<i class=\"fa fa-spinner fa-pulse fa-2x fa-fw\"></i>'\r\n        + '</p>';\r\n\r\n    /**\r\n     * Creates the modal for the course copy form\r\n     *\r\n     * @private\r\n     */\r\n    function createModal() {\r\n       // Get the Title String.\r\n       Str.get_string('loading').then(function(title) {\r\n        // Create the Modal.\r\n        ModalFactory.create({\r\n            type: ModalFactory.types.DEFAULT,\r\n            title: title,\r\n            body: spinner,\r\n            large: true\r\n        })\r\n        .done(function(modal) {\r\n            modalObj = modal;\r\n            // Explicitly handle form click events.\r\n            modalObj.getRoot().on('click', '#id_submitbutton', function(e) {\r\n                //e.preventDefault();\r\n                e.formredirect = true;\r\n                processModalForm(e);\r\n            });\r\n            modalObj.getRoot().on('click', '#id_cancel', function(e) {\r\n                e.preventDefault();\r\n                modalObj.setBody(spinner);\r\n                modalObj.hide();\r\n            });\r\n        });\r\n        return;\r\n    }).catch(function() {\r\n        Notification.exception(new Error('Failed to load string: loading'));\r\n    });\r\n    }\r\n\r\n    /**\r\n     * Updates the body of the modal window.\r\n     *\r\n     * @param {Object} formdata\r\n     * @private\r\n     */\r\n    function updateModalBody(formdata) {\r\n        if (typeof formdata === \"undefined\") {\r\n            formdata = {};\r\n        }\r\n        if (typeof enrolId !== \"undefined\" && typeof enrolId !== \"undefined\") {\r\n            var params = {\r\n                'jsonformdata': JSON.stringify(formdata),\r\n                'plugin' : plugin,\r\n                'enrolid' : enrolId\r\n            };\r\n            modalObj.setBody(spinner);\r\n            Str.get_string('subscribetitle', 'block_subscriptions', course.shortname).then(function(title) {\r\n                modalObj.setTitle(title);\r\n                modalObj.setBody(Fragment.loadFragment('block_subscriptions', 'new_enrol_form', contextid, params));\r\n                return;\r\n            }).catch(function() {\r\n                Notification.exception(new Error('Failed to load string: copycoursetitle'));\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n   /**\r\n     * Updates Moodle form with selected information.\r\n     *\r\n     * @param {Object} e\r\n     * @private\r\n     */\r\n   function processModalForm(e) {\r\n    e.preventDefault(); // Stop modal from closing.\r\n    console.log('herer');\r\n    // Form data.\r\n    var cancelform = modalObj.getRoot().find('form').serialize();\r\n    //var formjson = JSON.stringify(cancelform);\r\n\r\n    // Handle invalid form fields for better UX.\r\n    var invalid = $.merge(\r\n            modalObj.getRoot().find('[aria-invalid=\"true\"]'),\r\n            modalObj.getRoot().find('.error')\r\n    );\r\n\r\n    if (invalid.length) {\r\n        invalid.first().focus();\r\n        return;\r\n    }\r\n\r\n    // Submit form via ajax.\r\n    ajax.call([{\r\n        methodname: 'block_subscriptions_submit_user_enrolment_form',\r\n        args: {\r\n            formdata: cancelform\r\n        },\r\n    }])[0].done(function(response) {\r\n        // For submission succeeded.\r\n        var result = response;\r\n        console.log(response.result);\r\n        if(result.result){\r\n            modalObj.setBody(spinner);\r\n            modalObj.hide();\r\n            window.location.reload();\r\n        }\r\n        else{\r\n            updateModalBody(cancelform);\r\n        }\r\n    }).fail(function(fail){\r\n        console.log(fail);\r\n        // Form submission failed server side, redisplay with errors.\r\n        updateModalBody(cancelform);\r\n    });\r\n}\r\n    /**\r\n     * Initialise the class.\r\n     *\r\n     * @method\r\n     * @param {Object} context\r\n     * @param {Int} subscription\r\n     * @public\r\n     */\r\n    CancelModal.init = function(context, subscription) {\r\n        contextid = context;\r\n        subscriptionId = subscription;\r\n        // Setup the initial Modal.\r\n        createModal();\r\n        // Setup the click handlers on the copy buttons.\r\n        $('.action-subscribe-' + subscriptionId).on('click', function(e) {\r\n            modalObj.setBody(spinner);\r\n            e.preventDefault(); // Stop. Hammer time.\r\n            let url = new URL(this.getAttribute('href'));\r\n            let params = new URLSearchParams(url.search);\r\n            enrolId = params.get('enrolid');\r\n            plugin = params.get('plugin');\r\n            let courseId = params.get('id');\r\n            if(courseId !== null){\r\n                ajax.call([{ // Get the course information.\r\n                    methodname: 'core_course_get_courses',\r\n                    args: {\r\n                        'options': {'ids': [courseId]},\r\n                    },\r\n                }])[0].done(function(response) {\r\n                    // We have the course info get the modal content.\r\n                    course = response[0];\r\n                    updateModalBody();\r\n                }).fail(function() {\r\n                    Notification.exception(new Error('Failed to load course'));\r\n                });\r\n            }\r\n            else{\r\n                updateModalBody();\r\n            }\r\n            modalObj.show();\r\n        });\r\n\r\n    };\r\n\r\n    return CancelModal;\r\n});\r\n"],"names":["define","$","Str","ModalFactory","ajax","Fragment","Notification","contextid","enrolId","subscriptionId","course","modalObj","plugin","CancelModal","spinner","createModal","get_string","then","title","create","type","types","DEFAULT","body","large","done","modal","getRoot","on","e","formredirect","preventDefault","console","log","cancelform","find","serialize","invalid","merge","length","first","focus","call","methodname","args","formdata","response","result","setBody","hide","window","location","reload","updateModalBody","fail","processModalForm","catch","exception","Error","params","JSON","stringify","shortname","setTitle","loadFragment","init","context","subscription","url","URL","this","getAttribute","URLSearchParams","search","get","courseId","show"],"mappings":";;;;;;;;;;AA0BAA,yCAAO,CAAC,SAAU,WAAY,qBACtB,YAAa,gBAAiB,sBAC9B,SAASC,EAAGC,IAAKC,aAAcC,KAAMC,SAAUC,kBAM/CC,UACAC,QAEAC,eACAC,OACAC,SACAC,OAPAC,YAAc,GAQdC,QAAU,yFASLC,cAENb,IAAIc,WAAW,WAAWC,MAAK,SAASC,OAEvCf,aAAagB,OAAO,CAChBC,KAAMjB,aAAakB,MAAMC,QACzBJ,MAAOA,MACPK,KAAMT,QACNU,OAAO,IAEVC,MAAK,SAASC,QACXf,SAAWe,OAEFC,UAAUC,GAAG,QAAS,oBAAoB,SAASC,GAExDA,EAAEC,cAAe,WAiDJD,GACzBA,EAAEE,iBACFC,QAAQC,IAAI,aAERC,WAAavB,SAASgB,UAAUQ,KAAK,QAAQC,YAI7CC,QAAUpC,EAAEqC,MACR3B,SAASgB,UAAUQ,KAAK,yBACxBxB,SAASgB,UAAUQ,KAAK,cAG5BE,QAAQE,mBACRF,QAAQG,QAAQC,QAKpBrC,KAAKsC,KAAK,CAAC,CACPC,WAAY,iDACZC,KAAM,CACFC,SAAUX,eAEd,GAAGT,MAAK,SAASqB,cAEbC,OAASD,SACbd,QAAQC,IAAIa,SAASC,QAClBA,OAAOA,QACNpC,SAASqC,QAAQlC,SACjBH,SAASsC,OACTC,OAAOC,SAASC,UAGhBC,gBAAgBnB,eAErBoB,MAAK,SAASA,MACbtB,QAAQC,IAAIqB,MAEZD,gBAAgBnB,eAvFRqB,CAAiB1B,MAErBlB,SAASgB,UAAUC,GAAG,QAAS,cAAc,SAASC,GAClDA,EAAEE,iBACFpB,SAASqC,QAAQlC,SACjBH,SAASsC,gBAIlBO,OAAM,WACLlD,aAAamD,UAAU,IAAIC,MAAM,+CAU5BL,gBAAgBR,kBACG,IAAbA,WACPA,SAAW,SAEQ,IAAZrC,cAA8C,IAAZA,QAAyB,KAC9DmD,OAAS,cACOC,KAAKC,UAAUhB,iBACpBjC,eACCJ,SAEhBG,SAASqC,QAAQlC,SACjBZ,IAAIc,WAAW,iBAAkB,sBAAuBN,OAAOoD,WAAW7C,MAAK,SAASC,OACpFP,SAASoD,SAAS7C,OAClBP,SAASqC,QAAQ3C,SAAS2D,aAAa,sBAAuB,iBAAkBzD,UAAWoD,YAE5FH,OAAM,WACLlD,aAAamD,UAAU,IAAIC,MAAM,sDA8D7C7C,YAAYoD,KAAO,SAASC,QAASC,cACjC5D,UAAY2D,QACZzD,eAAiB0D,aAEjBpD,cAEAd,EAAE,qBAAuBQ,gBAAgBmB,GAAG,SAAS,SAASC,GAC1DlB,SAASqC,QAAQlC,SACjBe,EAAEE,qBACEqC,IAAM,IAAIC,IAAIC,KAAKC,aAAa,SAChCZ,OAAS,IAAIa,gBAAgBJ,IAAIK,QACrCjE,QAAUmD,OAAOe,IAAI,WACrB9D,OAAS+C,OAAOe,IAAI,cAChBC,SAAWhB,OAAOe,IAAI,MACV,OAAbC,SACCvE,KAAKsC,KAAK,CAAC,CACPC,WAAY,0BACZC,KAAM,SACS,KAAQ,CAAC+B,eAExB,GAAGlD,MAAK,SAASqB,UAEjBpC,OAASoC,SAAS,GAClBO,qBACDC,MAAK,WACJhD,aAAamD,UAAU,IAAIC,MAAM,6BAIrCL,kBAEJ1C,SAASiE,WAKV/D"}