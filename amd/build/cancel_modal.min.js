/**
 * This module provides the course copy modal from the course and
 * category management screen.
 *
 * @module     format_apoapage/copy_modal
 * @copyright  2020 onward The Moodle Users Association <https://moodleassociation.org/>
 * @author     Matt Porritt <mattp@catalyst-au.net>
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 * @since      3.9
 */
define("block_subscriptions/cancel_modal",["jquery","core/str","core/modal_factory","core/ajax","core/fragment","core/notification"],(function($,Str,ModalFactory,ajax,Fragment,Notification){var contextid,enrolId,userEnrolId,subscriptionId,course,plugin,modalObj,CancelModal={},spinner='<p class="text-center"><i class="fa fa-spinner fa-pulse fa-2x fa-fw"></i></p>';function createModal(){Str.get_string("loading").then((function(title){ModalFactory.create({type:ModalFactory.types.DEFAULT,title:title,body:spinner,large:!0}).done((function(modal){(modalObj=modal).getRoot().on("click","#id_submit",(function(e){e.formredirect=!0,function(e){e.preventDefault();var cancelform=modalObj.getRoot().find("form").serialize();const formData=modalObj.getRoot().find("form").serializeArray();var ueid=modalObj.getRoot().find('input[name="ueid"]').val(),invalid=$.merge(modalObj.getRoot().find('[aria-invalid="true"]'),modalObj.getRoot().find(".error"));const confirmValue=formData.find((item=>"confirm"===item.name)).value,confirmationStringValue=formData.find((item=>"confirmationphrase"===item.name)).value;if(console.log(confirmValue,confirmationStringValue),confirmValue!==confirmationStringValue)return void updateModalBody(cancelform);if(invalid.length)return void invalid.first().focus();ajax.call([{methodname:"block_subscriptions_unenrol_self",args:{ueid:ueid}}])[0].done((function(){modalObj.setBody(spinner),modalObj.hide(),console.log(course.shortname),ajax.call([{methodname:"block_subscriptions_notify",args:{cancelled:!0,coursename:course.shortname}}])[0].done((function(){window.location.reload()})).fail((function(fail){console.log(fail)}))})).fail((function(){updateModalBody(cancelform)}))}(e)})),modalObj.getRoot().on("click","#id_submitbutton",(function(e){e.formredirect=!0,function(e){e.preventDefault(),console.log("herer");var cancelform=modalObj.getRoot().find("form").serialize(),invalid=$.merge(modalObj.getRoot().find('[aria-invalid="true"]'),modalObj.getRoot().find(".error"));if(invalid.length)return void invalid.first().focus();ajax.call([{methodname:"block_subscriptions_submit_user_enrolment_form",args:{formdata:cancelform}}])[0].done((function(response){var result=response;console.log(response.result),result.result?(modalObj.setBody(spinner),modalObj.hide(),window.location.reload()):updateModalBody(cancelform)})).fail((function(fail){console.log(fail),updateModalBody(cancelform)}))}(e)})),modalObj.getRoot().on("click","#id_cancel",(function(e){e.preventDefault(),modalObj.setBody(spinner),modalObj.hide()}))}))})).catch((function(){Notification.exception(new Error("Failed to load string: loading"))}))}function updateModalBody(formdata){if(void 0===formdata&&(formdata={}),void 0!==enrolId&&void 0!==userEnrolId){var params={jsonformdata:JSON.stringify(formdata),enrolid:enrolId,ueid:userEnrolId};modalObj.setBody(spinner),Str.get_string("cancelsubscriptiontitle","block_subscriptions",course.shortname).then((function(title){modalObj.setTitle(title),modalObj.setBody(Fragment.loadFragment("block_subscriptions","new_cancel_form",contextid,params))})).catch((function(){Notification.exception(new Error("Failed to load string: copycoursetitle"))}))}else if(void 0!==enrolId&&void 0!==enrolId){params={jsonformdata:JSON.stringify(formdata),plugin:plugin,enrolid:enrolId};modalObj.setBody(spinner),Str.get_string("subscribetitle","block_subscriptions",course.shortname).then((function(title){modalObj.setTitle(title),modalObj.setBody(Fragment.loadFragment("block_subscriptions","new_enrol_form",contextid,params))})).catch((function(){Notification.exception(new Error("Failed to load string: copycoursetitle"))}))}}return CancelModal.init=function(context,subscription){contextid=context,subscriptionId=subscription,createModal(),$(".action-cancel-"+subscriptionId).on("click",(function(e){e.preventDefault();let url=new URL(this.getAttribute("href")),params=new URLSearchParams(url.search);enrolId=params.get("enrolid"),userEnrolId=params.get("ueid");let courseId=params.get("courseid");null!==courseId?ajax.call([{methodname:"core_course_get_courses",args:{options:{ids:[courseId]}}}])[0].done((function(response){course=response[0],updateModalBody()})).fail((function(){Notification.exception(new Error("Failed to load course"))})):updateModalBody(),modalObj.show()})),$(".action-subscribe-"+subscriptionId).on("click",(function(e){e.preventDefault();let url=new URL(this.getAttribute("href")),params=new URLSearchParams(url.search);enrolId=params.get("enrolid"),plugin=params.get("plugin");let courseId=params.get("courseid");null!==courseId?ajax.call([{methodname:"core_course_get_courses",args:{options:{ids:[courseId]}}}])[0].done((function(response){course=response[0],updateModalBody()})).fail((function(){Notification.exception(new Error("Failed to load course"))})):updateModalBody(),modalObj.show()}))},CancelModal}));

//# sourceMappingURL=cancel_modal.min.js.map